/*
урок 3.
Выводы в кносоль и изучение Escape Symbol
#include<iostream> //подключение библиотеки вывода. директива препроцессора.
#include<math.h> //подключение библиотеки математических операций
using namespacestd; // использование пространства имён
 void main()  // void это процедура которая ничего не возвращает. main это функция. 
{setlocale(LC_ALL, "Rus"); //функция, для вывода ру символов в консоль
	std::cout << "В лесу родилась елочка,\nВ лесу она росла, \nЗимой и летом стройная, \nЗеленая была. \n \nВ лесу родилась елочка, \nВ лесу она росла, \nЗимой и летом стройная, \nЗеленая была; \n \nМетель ей пела песенку \: \n «Спи, елочка, бай - бай \!»\nМороз снежком укутывал \:\n «Смотри, не замерзай \!»\n";
	return 0;} 

 
 урок 4 и 5.
 Типы данных и переменные.
 Числа с плавающей точкой float (вещественные числа одинарной точности), double(вещественные числа двойной точности).размер байта 4,8
 Целые числа int(простые числа), short(короткие числа), long(длинные числа). размер байта 4,2,4.
 Символьный тип char (символы). размер байта 1.
 Логический типо bool (true/false). размер байта 1.
 с переменными работа идёт так: тип_данных имя_переменных
 
void main()
{	setlocale(LC_ALL, "Rus");
	long myfirstvariable=1.1123123123, mysecondvariable=1234567891123456789, mythirdvariable=4;
	bool a = false, b = true;
	cout << myfirstvariable << " " << mysecondvariable <<" "<< mythirdvariable << endl;
	cout << a << " " << b << endl;};
 
 
урок 6.
константа - тоже что и variable, только для хранения данных, которые меняться точно не будут

void main()
{	setlocale(LC_ALL, "Rus");
	const int COUNTDAYSINWEEK = 7;
	const char TAB= '\t';
	int a = 1;
	cout <<COUNTDAYSINWEEK<<'\t' <<COUNTDAYSINWEEK<<TAB<< a << endl;};

урок 7.
Ввод данных. Cin.
 
void main()
{	setlocale(LC_ALL, "Rus");
	char var1,var2;
	cout << "Введите символ первый и второй: ";
	cin >> var1 >> var2;
	cout <<"Теперь вы " <<var1<<var2;};

урок8.
Арифметическая операция с символами. 
Есть три вида ОПЕРАТОРА: УНАРНЫЕ(минус -), БИНАРНЫЕ(сложение+, вычитание-,неравен!=, больше>, меньшеилиравно <=), ТЕРНАРНЫЕ.
ДЗ: Введите три числа и выведите на экран значение суммы, произведения и среднее арифметическое этих чисел.

using namespace std;
void main()
{setlocale(LC_ALL, "Rus");
	int a,b,c;
	cout << "Введите три числа: "<<endl;
	cin >>a>>b>>c;
	cout << "Сумма чисел: " << a + b + c << endl << "Произведение чисел: " << a-b-c << endl << "Среднее арифметическое чисел: " << (double)(a+b+c)/3;};

урок 9
Инкремент (увеличение на единицу) и дикремент(уменьшение на единицу). два символа ++ это постфикс. т.е ++b это постфиксный инкримент. --b  постфиксный дикремент.
using namespace std;
void main() {
	int a = 1, b;
	b = ++a * a++;
	cout <<b<<endl<<a<<endl;};

урок 10
Сокращенные арифмитические формы.
#include <iostream>
using namespace std;
void main()
{int a = 0;
cout << a << endl;
a = a + 20;
cout << a << endl;
a += 20;
cout << a << endl;};

урок 11. Логические операции.
1. Операторы сравнения: <,>,<=,=>;
2. Операторы равенства: == равно, != не равно
3. Операторы обхединения и отрицательная инверсия && - и, || - или, != - не;

#include <iostream>
#include <math.h>
using namespace std;
void main() {
	setlocale(LC_ALL, "Rus");
	int a = 6, b = 6;
	cout << (a < b) && (3 < 4) || (3 == 4);
}

Урок 12. Конструктор логического выбора if else.
if (утверждение или выражение) {дейстие1;}else{;}

#include <iostream>
#include <math.h>
using namespace std;
void main() {
	setlocale(LC_ALL, "Rus");
	int a;
	cout << "Введите число" << endl;
	cin >> a;
	if (a > 5) {cout << "Ваше число больше 5";}
	else if (a == 5) {  cout << "Ваше число равно 5";  }
	else {cout << "Ваше число меньше 5"; }
}

ДЗ2. Написать программу, проверяющую число, введенное с клавиатуры на четность.
*/
#include <iostream>
#include <math.h>
using namespace std;

int main()
{
	setlocale(LC_ALL, "Rus");
	int x;
	cout << "Введите число для проверки: ";
	cin >> x;
	if (x % 2 == 0)
	{cout << x << " это четное число.";}
	else
	{cout << x << " это нечетное число.";}
}